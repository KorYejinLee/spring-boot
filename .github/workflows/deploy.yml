name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_PW }}

      - name: SSH to EC2
        uses: appleboy/ssh-action@v1.0.3
        env:
          APPLICATION_PROPERTIES: ${{ secrets.APPLICATION_PROPERTIES }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: APPLICATION_PROPERTIES
          scripts_step: false # Disable internal script execution

      - name: 환경 설정
        run: |
          ssh -i ${{ secrets.EC2_PRIVATE_KEY }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd /home/ubuntu/spring-boot
          rm -rf src/main/resources/application.yml
          git pull origin main
          echo "$APPLICATION_PROPERTIES" > src/main/resources/application.yml
          sudo ./gradlew clean build
          EOF

      - name: 사용 중인 port kill
        run: |
          ssh -i ${{ secrets.EC2_PRIVATE_KEY }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          sudo fuser -k -n tcp 8080 || true
          sudo fuser -k -n tcp 3306 || true
          EOF

      - name: 사용 중인 container 중지
        run: |
          ssh -i ${{ secrets.EC2_PRIVATE_KEY }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          sudo docker stop $(sudo docker ps -aq)
          EOF

      - name: 컨테이너 pull
        run: |
          ssh -i ${{ secrets.EC2_PRIVATE_KEY }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          sudo docker pull ${{ secrets.DOCKER_ID }}/spring-boot-demo:mysql1.0
          sudo docker pull ${{ secrets.DOCKER_ID }}/spring-boot-demo:springboot1.0
          EOF

      - name: 컨테이너 실행
        run: |
          ssh -i ${{ secrets.EC2_PRIVATE_KEY }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          sudo docker run -d -p 3306:3306 ${{ secrets.DOCKER_ID }}/spring-boot-demo:mysql1.0
          sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_ID }}/spring-boot-demo:springboot1.0
          nohup java -jar build/libs/*SNAPSHOT.jar > ./output.log 2>&1 &
          EOF
